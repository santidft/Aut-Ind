<?xml version="1.0" encoding="utf-8"?>
<Programs xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.staubli.com/robotics/VAL3/Program/2">
  <Program name="Piramide">
    <Locals>
      <Local name="j" type="num" xsi:type="array" size="1" />
      <Local name="k" type="num" xsi:type="array" size="1" />
      <Local name="i" type="num" xsi:type="array" size="1" />
      <Local name="l" type="num" xsi:type="array" size="1" />
    </Locals>
    <Code><![CDATA[begin
  //Mueve el brazo para crear una pirámide en 3D.
  
  // Se desplaza a la posicion de espera
  pEspera=appro(pPieza,{0,0,-50,0,0,0})
  movej(pEspera,tVentosa,mNomSpeed)
  waitEndMove()
  
  //Ciclo
  while !bTermina
    if bStartPiramide 
      for i = 0 to nPlantas - 1 // Bucle de plantas
        for j = 0 to nPlantas - nNivel - 1 // Bucle de filas
          for k = 0 to nPlantas - nNivel - nFila - 1 // Bucle de piezas para fila central y superiores
            // Se espera la orden de pieza preparada para continuar
            sMensaje="pulse 'enter' para continuar"
            wait(bPiezaPreparada)
            bPiezaPreparada=false
            sMensaje=""
            
            pObjetivo = appro(pCentro,{nX,(nLPieza/2)*(nPlantas-nNivel-nFila-1)-nY,-nZ,0,0,0})
            call pick(pPieza,tVentosa,mNomSpeed,mVelApprox)
            call place(pObjetivo,tVentosa,mNomSpeed,mVelApprox)
            nY=nY+nLPieza
          endFor
          // Nueva fila, se reinician los valores de nY y aumenta nCont que calcula un nuevo valor para nX
          nY=0
          nCont=nCont+1
          //nX aumenta para hacer una fila inferior a continuación
          nX=nX+nWPieza*nCont 
          //Aumenta nFila para disminuir nº de piezas por cada fila
          nFila=nFila+1
          for l = 0 to nPlantas - nNivel - nFila - 1 // Se repite el bucle de piezas para hacer también las filas inferiores
            // Se espera la orden de pieza preparada para continuar
            sMensaje="pulse 'enter' para continuar"
            wait(bPiezaPreparada)
            bPiezaPreparada=false
            sMensaje=""
            
            pObjetivo = appro(pCentro,{nX,(nLPieza/2)*(nPlantas-nNivel-nFila-1)-nY,-nZ,0,0,0})
            call pick(pPieza,tVentosa,mNomSpeed,mVelApprox)
            call place(pObjetivo,tVentosa,mNomSpeed,mVelApprox)
            nY=nY+nLPieza
          endFor
          // Nueva fila, se reinician los valores de nY y aumenta nCont que calcula un nuevo valor para nX
          nY=0
          nCont=nCont+1
          //nX disminuye para hacer una fila superior a continuación
          nX=nX-nWPieza*nCont
        endFor
        //Nueva planta, se reinician los valores nX, nFila y nCont y aumentan nZ y nNivel
        nX=0
        nZ=nZ+12
        nFila=0
        nCont=0
        nNivel=nNivel+1
      endFor
      bStartPiramide=false
    endIf
    delay(0) // Se le da paso a la siguiente tarea
  endWhile
  bTermina=false
  
  // Se vuelve a la posición de orgien
  movej(jHome,tVentosa,mNomSpeed)
  waitEndMove()
  
  bFin=true
  
end]]></Code>
  </Program>
</Programs>